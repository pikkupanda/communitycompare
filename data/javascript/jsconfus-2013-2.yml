conference: JSConfUS
title: JavaScript Masterclass
speaker: Angelina Fabbro
year: 2013
source: https://www.youtube.com/watch?v=v0TFmdO4ZP0
automatic: true
duration: 1353
text: |
  0:19okay good morning everybody I as much in my name is Angelina Fabro
  0:22on I i live in Vancouver British Columbia Canada
  0:26I sunny Vancouver it's actually not very sunny
  0:300 and I work for a company called steam clock software and for the last couple
  0:35years I've been building mobile applications
  0:37for native for PhoneGap accused objective-c a lot of JavaScript
  0:41it also done a couple about and I work with some some pretty talented and
  0:45awesome people there
  0:45on but if you talk to me yesterday got a bit of a spoiler and that's that
  0:49i'm john was a lie in early June to working on Firefox OS
  0:52so that is what I do um the web is actually my
  0:58my first love and in making website since I was really small my first one
  1:01was on Angel Fire
  1:03on I mention sometimes you and I it was about dolphins and all it was is
  1:08basically an image
  1:09served offense I like to think I've come a a little bit farther since then
  1:13so a little bit about me I am NOT a beginner at programming
  1:18oMG but I do I'm not an expert I don't consider myself to be an expert
  1:22at all on and so this talk is actually about trying to become an expert
  1:27as someone who considers themself intermediate developer we have a lot of
  1:31resources and a lot of initiatives to get people started programming
  1:35indicator to begin our programmers and until the last year to it was actually
  1:39really hard to find articles
  1:41and tutorial bits for people who are intermediate developers who think
  1:46are you know I I don't know I'm writing code but
  1:50how do how do I make it better you know I
  1:53and so that's a little bit about what this talk is about so first things first
  1:56look at a few konnen biases on the way because I run into these sorts of ideas
  2:00whenever I'm
  2:01I'm teaching or presenting or when people come to me and they like Sir
  2:04secretly disclose that their
  2:06feel a bit insecure about their programming I you're not special
  2:10not a view no um a
  2:13neither is anybody else so that's okay we're all on the same page
  2:17I know your mom told you this when you were a kid but this is actually a
  2:20motivational anti pattern it works one of two ways:
  2:23either your mom tell you they're totally specialist all this national tell with
  2:27the violin and then maybe like you don't practice and then
  2:29all the other people who do serve catch up in he'll feel so special anymore
  2:33%uh or you know you think that
  2:36maybe if someone else was told her special maybe you're not special
  2:40and so there's some like disparity between you and the special people often
  2:43the people we think we're experts we can for something
  2:45very different about them from from where we are um
  2:48and so what I wanted to say that nobody is born with natural talent
  2:52there are no natural born programmers and whenever I say this people get
  2:56really really emotional about this
  2:58and I mean really emotional problems because my mom told me they were special
  3:02or call because if they are good program where they like to pretend that their
  3:05special another some natural talent and there's a whole body research out there
  3:09you're all smart individual so I'll leave it up to you to
  3:12to do your own research and take a look there is an interesting book called
  3:16out liars by think Malcolm Gladwell early I got that right
  3:19the discuss this topic at length now um
  3:23you are the result of many complicated interactions Obama some other things
  3:27that can
  3:28make you seem like a natural usually have to do with your
  3:31a early childhood education %uh the one thing that people like to go I want to
  3:35really quickly as genetics and say like all you know maybe there's
  3:38like a gene for programming or gene for logical thinking and I'm pretty sure
  3:42that there are probably jeans that we can
  3:44identifying and others at least a few S&P's identified four
  3:48nonverbal intelligence for example but it's not that simple our understanding
  3:52of genetics has come a long way in the last 10
  3:55a twenty years and really the focus now is on the epigenetics the environmental
  3:59pressures that affected gene expression because even if you have like the
  4:02predisposition to you
  4:03up you know unfortunately have cancer are you may not necessarily have cancer
  4:07if
  4:08you know a if you take care of herself if the environmental pressures aren't
  4:11there
  4:12and so that's a little bit nebulous to say that genetics are deterministic cuz
  4:17they just they just really aren't
  4:18I also your early childhood exposure to logical thinking whether or not you have
  4:22that
  4:23on early childhood practice up these logical skills
  4:26and early framing I've your relationship the logical thinking
  4:29I'm a lot of people like myself who grew up in a fairly all semi-rural area and
  4:33didn't have a lot of
  4:35a positive programmer role models like cool
  4:38you know we were so appalled that you know if you like Matthew like
  4:41programming what stocks never gonna go anywhere why do you bother with those
  4:44computers and some people
  4:46you know get framed really early that like your math is going to be too hard
  4:49for them or program is going to be too hard for them
  4:51well I'm here to tell you today that nobody is a natural
  4:54and um sized another Jeff about people not liking the large economic
  4:59if they feel like they're special I'll so your feelings don't matter here
  5:03oMG inspired a popular believes there's no one thing that you're destined to do
  5:07purpose doesn't happen to you any more than love does
  5:10these things evolve when you commit yourself a lead to something or someone
  5:13and make the decision to work through the muck
  5:15so I wanted to say that yes I mean poker programming and math a logical thinking
  5:20can be a hard thing but that every single person in this audience and their
  5:24kids and their friends in anybody me is capable of programming
  5:27and they're so much bloody problematic framing up this topic that it drives me
  5:32up the wall
  5:33I in 2006 jeff Atwood posted a
  5:36host I guess are you post he made a post about
  5:39a academic study and I put that in quotes because while it was put out by
  5:43academic institution
  5:45anybody who's had any training in you and he's gonna done little to grad
  5:49school anybody has been involved in congress science and the behavioral
  5:51sciences and done research design
  5:53worry that paper and laugh because the resources I was very poor the sample
  5:57size is very small
  5:59and what the study was trying to say was up for
  6:02students that come into our programming courses that are University
  6:05we can give them a test and we can tell you are so we can predict
  6:09how well we're gonna do with the course we can then separate programmers for
  6:12non-programmers
  6:13but that's really problematic because
  6:17the way people interpreted this is the way the media offer often interprets
  6:20things and that's very sensational
  6:22and they started to like of we've got a test now to tell
  6:25your natural programmers from from program note for non-programmers
  6:29smells like Walt know all this does is that someone can tell
  6:32how well someone's gonna do based on how they teach a course but programming
  6:36and also only considering the knowledge and experience they have with logical
  6:40thinking
  6:41up until that point which you just don't know anything about maybe somebody
  6:44you know didn't have a good relationship with math in school maybe someone else
  6:47rip with parents were scientists and they just love the stuff and so I really
  6:51I really
  6:52I think you should I take all that stuff with a grain of salt because I
  6:55its it's often framed and like I said very problematic way
  6:58um so yeah so nobody special and experts are not born with any natural talent so
  7:03that you know that I love the way
  7:05actually really awesome I its actually really empowered because that means that
  7:10any if you have the capacity to take from where you are as a programmer
  7:13and move towards expertise and move toward mastery in feel a lot more
  7:17confident
  7:18about the things that you do at your job or a nurse I projects
  7:21so if you prosper if you practice logical thinking and he practiced
  7:24programming a lot
  7:25and you manage to absorb another the you know vast amount of two main goals is
  7:30that they're
  7:30you too well become an expert
  7:34so that's pretty a pretty awesome so then how do you know that you're not a
  7:38beginner
  7:40OMS a cleaner one I think I is that you can use the fundamentals
  7:44in any language so by fundamentals I mean your basic install structures
  7:48like loops are if else statements I'm know how to do you like variable
  7:52assignments
  7:53I know how to do some really basic operations and what with the main
  7:56operators are language
  7:58I'm if you if you can kinda sit down with a new language
  8:01and get out a hello world I or make a very small app without having to know
  8:05the nuances the language
  8:07or framework I think that you were a little bit beyond being a beginner
  8:11a clue number two you are comfortable writing code from scratch
  8:14I when people are beginners there's definitely a pattern a big crowd like a
  8:18third party library
  8:19like maybe J crew as an example and they're like oh wow I can do so much
  8:22cool stuff with jQuery
  8:24arm but a lot of the time the like put a Korean
  8:27and then we'll just put in a plug in to not touch it and that's not really the
  8:30same as
  8:31programming right um so I would say that you know someone who's a beginner or
  8:36just beyond being a beginner is a comfortable writing code from scratch
  8:40and not just
  8:40editing or gluing together the pieces that they find
  8:44and and just to be perfectly clear that is an important step
  8:47like just being able to i get into the code and try reading and editing play
  8:51with and copy and paste a little bit
  8:52thats actually excellent transitional skill to becoming a better programmer
  8:56despite the fact that
  8:57on people are really games that I i think that that's perfectly fine for
  9:00beginners
  9:00so if you're not to begin your public on police writing some code from scratch
  9:04whether it's a couple functions are a whole
  9:06you know like reading all your code to make your single page application work
  9:10I could number three that you're not a beginner I when you do something like J
  9:13Crew you peek inside cuz you wanna know how it works
  9:16you may not necessarily understand all the things that are in there but you
  9:18were getting curious and you want to know like
  9:21you know what's what's going on like how does how does this iterator work how
  9:24does
  9:25a you know how does this selector stuff for a start getting in there and even if
  9:28you don't really understand all that you're at least trying to
  9:32and number four you may feel like your code is mediocre
  9:35and you don't really know what to do about it and
  9:38this is a really interesting one because people will not talk about this topic
  9:41openly
  9:42advance that I teach and talk at but they'll come to me
  9:45personally later on and I'll tell me
  9:48and it's very interesting because there there's no real like trend about
  9:52like gender or ethnic background or anything like that it's literally all
  9:55sorts of people like
  9:56haiti's so I mean I I think you're good
  10:00a javascript will say so how I feel really mediocre
  10:04I feel like there's always pressure for me to be really good really fast because
  10:07the community a really smart people
  10:09I like well I feel that I feel you I know them feels
  10:12um and so if you have that feeling you're not alone and
  10:17you know so okay so those are some ways that you know that you are not a
  10:20beginner
  10:21well how do you know that you're not an expert right and if not begin earning
  10:25maybe
  10:25may be an expert a clue number one you don't quite Brock all the Cody Reed
  10:30including comments so maybe you do get into the Jake resource
  10:33and maybe there are some comments but you still early understand what they're
  10:35doing a bind and you know there's these things called call in applying you don't
  10:39understand why there's like two versions what seems to be doing the same thing
  10:41and
  10:42and you start like exposing yourself to some more I higher level concepts this
  10:46way
  10:47and so if you don't quite understand all those things you reading probably
  10:50probably are not quite an expert um
  10:53clue number two is that you can't explain what you know
  10:57some people like are you with me that there are plenty of competent developers
  11:00that are awesome but you know can't for the life of them explain
  11:05their methodology or their practice or the what their coding to someone else
  11:09I think that this is a big problem and even if you are
  11:12you know you further on other avenues %uh expertise like maybe you do
  11:16understand binding call apply for example
  11:19om but you can't explain what you know to someone in a patient
  11:22and clear way that's shortcoming and you need to get better at that because
  11:27programmers need to be able to communicate and disseminate knowledge
  11:29between one another
  11:31and with their teams that they work with
  11:35and so clean number three are you are confident debugging
  11:38this one for me like took a long time like for me to actually really get into
  11:42the debugger in like Roman when I'm working with objective-c in in Xcode and
  11:46stuff like that and to develop like sort have
  11:48oMG a mental model love how I can solve various problems with different
  11:52debugging strategies rather than just doing this
  11:55om you know I throw in some console logs all over the place special you know when
  11:58I started using
  11:59note I was a little late adopter note and I started realizing I was like all
  12:04assy hiney call backs okay on
  12:07I like he just kinda stopped right there um and then click number four is you
  12:11rely on references too much
  12:14so um it's really interesting
  12:17that most of us who are employed as is software engineers a wonderful person
  12:21whatever titles for writing code all day
  12:23probably you do have a tab open in your browser that is
  12:27a language reference or API reference of some sort because to memorize all of the
  12:31stuff
  12:32is kind of crazy and these things are changing constantly to
  12:35but I think that you should be reading %uh a large amount of your code for
  12:38example particularly vanilla JavaScript in this case
  12:41without necessarily needing to refer to a reference
  12:44when if you need to once in a while then that's fine but I mean you should
  12:48probably
  12:48aims to write as much with as little reference as possible
  12:52and the reason for this is just that you're probably accomplish more
  12:55honestly you will be stopping and getting derailed and you can write
  12:59with confidence when you know when you've internalized those little bits
  13:03so if this describes you if you are not a beginner and you're not an expert
  13:06welcome to the ambiguous zona intermediate ness
  13:09you are not alone I am there with you I
  13:13and so from going from there what does the curriculum for mastery actually look
  13:17like
  13:18and also what makes a great programmer and let's start with that second one
  13:23so it really depends who's asking knees this is a little bit of a quote
  13:26are written by a gentleman named and Weissman who is writing I really
  13:29really love he is on well I know he's definitely older than I am but he's got
  13:34something like thirty or forty years experience maybe more than that in
  13:37programming
  13:37and he's written actually really interesting you but that's great for
  13:40programmers all levels but particularly if you're
  13:42I starting out I'm he just google advice when you'll be able to find it
  13:46and I read this book and it just really it really got me in a in a good way
  13:50because he answered a lot of surviving logical questions about the fuel the
  13:53programming that
  13:54I have been asking myself and and questioning like taiwan I don't keep
  13:58doing this
  13:58short answer yes I love so who who is a good programmer it depends who's asking
  14:04to a project manager the programmer with every deadline for guns the quality
  14:07is a good programmer add to the customer the programmer solves the problem
  14:11fastest
  14:11is a good programmer to the business owner the programmer who makes the most
  14:14money
  14:15was a good programmer as the junior programmer the best mentor
  14:19is a good programmer and to another programmer the program that they're most
  14:22likely to want to go to battle with
  14:24as a good programmer so what do I need to learn to be an expert
  14:29in like %uh how do you how do you even do that om
  14:33you know what would you do you wanna feel in stock so I'm gonna give you some
  14:35suggestions he ran a little bit I'll
  14:37ideas for material so that you too can transform yourself from being
  14:41intermediate
  14:41into being an expert oMG so it's just a number one
  14:47please ask why obsessively short existential angst
  14:51what all the time I mean I was talking specifically about code right now but I
  14:55mean like just in general with her
  14:56with your life I mean you can ask yourself like why did I choose eggs
  14:59benedict this morning
  15:00or why why did I choose more guards humble
  15:03why did I choose to use jQuery why why did I want to do my
  15:08down why did I what issues like twitter twitter bootstraps because I i'm
  15:12uncomfortable in the front and
  15:13why they choose node.js to do on my server stuff i mean aside from its
  15:16really cool
  15:17ever been in this room probably like that but like why did you make that
  15:20decision why did you use express as your as a framework for your rents and all
  15:24that
  15:25arms to ask why obsessively to the point where you enjoy yourself
  15:28oMG it will give you a tremendous amount of self awareness about the choices that
  15:32you're making
  15:33when you're doing development summer to I really think that you should teach or
  15:38speak at an event
  15:39there's a solution that if you're standing up here that you're an expert
  15:42I like to think I guess am on my way to being an extra but I'm definitely
  15:46not an expert the only thing you need to come up here and speak
  15:49is an idea about something that you've made and like the previous presentation
  15:53where Romney was showing his experiment
  15:55that's a perfect example if you've done something like that you need to tell
  15:58people about it and share the knowledge that you have with others
  16:01and what happens when you were a you're teaching or speaking at an event is
  16:05that you get to assertive formalize and Sourav
  16:09make the idea that you have about what you worked on a little bit more concrete
  16:13if you can communicate those effectively you probably know the area
  16:16pretty well I when it comes to teaching I teach
  16:19at early zoning code and I also do some stuff for Simon Fraser University
  16:23um and that is super and lightning because
  16:26it's a really good reflection on the kinds of assumptions you make about
  16:30your own ability for example at least learning code I get people asking me
  16:33questions like
  16:34well okay after work ahead in the slides and now I have this piece of code that I
  16:38want to reuse
  16:39should i copy and paste it and I'm like no you shouldn't do that you need
  16:43functions
  16:44and people often at a or ask really really compelling questions that cause
  16:48you to realize
  16:49oh I actually know a lot more than I thought about programming
  16:52so I also suggest working through a suggested curriculum love
  16:55books this is from John dressings website that he's had up a little while
  16:59called
  17:00learning advanced JavaScript um and if you can go through this this was sort of
  17:04like a proposed curriculum for advanced JavaScript
  17:06which eventually involved itself into this book
  17:10the secrets of the JavaScript ninja which I think has a San around the front
  17:14om and this book is really fantastic for me to read because
  17:18I keep going for it apartment I keep going for it and
  17:21are realizing there's a lot in that book that is totally rehash for me and I
  17:24already know
  17:25but there's a lot of stuff in there don't know so reading a book like this
  17:28that has a comprehensive
  17:30I certain outline %uh topics have mastery for JavaScript
  17:34hope your rear for what you know and what you don't know and that's a really
  17:37good feeling like to read your book not yeah I got that
  17:39or discover that like you had no idea about functionalization
  17:43a totally blew my mind for example on experiment recklessly
  17:47the code doesn't care this is just a number for the code does not care how
  17:51old you are who you are where you came from or anything like that
  17:54um nobody needs to see your code tell you push it up to the branch that you
  17:57need to push it too
  17:58or into you need to show it to someone else for code review so experiment
  18:01be be reckless like do silly things just to see what happens
  18:05the coat just poets inner into you give a purpose
  18:08so number five mom you should have opinions
  18:11if you're pressing two words a I guess an expert level understanding and
  18:15knowledge
  18:15you're probably nationally start to have opinions om although it's really
  18:19important to remember that when you're having opinions that
  18:22and you're trying to sort of cut cooperate with people that um
  18:25you're going to run into people that you disagree with and there's a little song
  18:28that I like on the internet about that and it goes something like this:
  18:32it's okay to not like things but don't be a jerk about the things you don't
  18:36like to just internalize that
  18:38please I love yeah I really like this on my only everybody we're having opinions
  18:43on things again
  18:44don't forget to state your sis fact rest don't get to play so just you know
  18:48be be reasonable and also accept that you could be wrong and they're being
  18:51wrong is actually fantastic because there's an opportunity for learning
  18:55their
  18:56so number six seek mentorship if you're here you're probably already in the
  18:59right place but also in your workplace
  19:01I one of the most fantastic things that were casting pop softer is being able to
  19:05turn around Alan pipe was where the cofounders
  19:07night hey so I have this ridiculous sounding JavaScript idea an or question
  19:11and then we just got to the white board and talk about it with like no
  19:15you know we're best about it like I know that it's not always easy for some
  19:18people in there
  19:20jobs to do that but if if you can't do that in your job try and find another
  19:23job where you can do that you'll become a better programmer
  19:26so just in seven program a lot suggestion 8
  19:29stop fucking programming sometimes any breaks okay you like to thank you can
  19:33code 24/7
  19:35your brain doesn't work that way it needs needs breaks that's why when you
  19:38like are trying to fall asleep or you're in the shower BAM you know how to fix
  19:40that but you need time away from the computer
  19:43comes in just 29 write JavaScript a lot suggestion 10
  19:47right now the language for a while actually i mean you should probably
  19:50reading mostly in javascript
  19:51but saddam if you get outside your comfort zone a little bit and start
  19:54comparing jobs for but other languages you'll find that
  19:57a there are a lot of little nuances to JavaScript maybe didn't know
  20:02and programming another language exercises the brain much in the way that
  20:05learning another
  20:06I'll spoken language what in a sense om
  20:09number eleven think like a programmer when a FK people think I'm really weird
  20:13for optimizing my room when I go to Ikea and figure out what the optimal way to
  20:16get through this fast as possible
  20:18and that might be silly to some you but that greatly you should be doing that
  20:21sort of thought exercises as much as you possibly can because
  20:24dot exercises the logical part in her brain which is largely what searching
  20:28for programming
  20:29and us just in 12 know what good feedback is
  20:32and reject all else I'm it turns out that some people are very happy with
  20:36themselves and they will take it out on you
  20:38so sometimes on the internet someone will reply to your question or post
  20:42and honestly like if they're not being constructive way for a win at this debt
  20:47so they say something mean
  20:49oMG tone is a bit of a variable one then
  20:52you know honestly if you're not getting anything constructive out a bit probably
  20:55it's a waste your time there'll be someone else you can give you
  20:58constructive criticism
  20:59so just know how to differentiate between good feedback and for all
  21:02feedback
  21:03om the last one really that the suggestion is to break free from hoster
  21:06syndrome
  21:07oMG it just how so happens that if you write code you are programmer
  21:11the end relative your ability people to come out of the beginner JavaScript
  21:15courses that I teach
  21:16tell me that they want to be quote a real programmer one day
  21:19an ass like okay what are you writing code yeah I know I'm writing code every
  21:23day
  21:24okay great your programmer no no actually I wanna be a real programmer
  21:27and what they're actually trying to say is that they want to be good
  21:30and so hopefully if you or someone at home they get to see this video and
  21:33maybe you are in this nebulous intermediate zone
  21:35are you understand that yes you r programmer and your desire to want to be
  21:39good
  21:39is good and you will get there I promise if you do some of these things
  21:43and I want you to fall in love with their process I want you to follow up
  21:46with the balance between writing code and taking breaks I want you to fall in
  21:49love with the process up like
  21:50you know arguing your point and then taking the opposite position because
  21:53this or a variety is what's going to
  21:56help you grow as a person is going to expand your self-awareness
  21:59and hopefully make you a better critical thinker about your programming
  22:02as if this is the end my presentation thank you wonderful humans for inviting
  22:06me to share
  22:06us has been jobs could master class and I i mention if I were you can follow me
  22:10on Twitter at
  22:12a Angelina Magnum our questions Bible
  22:15attack